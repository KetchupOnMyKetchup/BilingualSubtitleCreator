# TODO not used yet but add this later to auto-detect ISO code for languages
# main/additional/lang_helper.py
# Comprehensive ISO 639-1 language code resolver

def get_iso_code(language_name: str) -> str:
    """
    Given a human-readable language name, return the ISO 639-1 two-letter code.
    Cleans up spacing, casing, and validates input.
    Raises ValueError if the language is unknown.
    """

    if not language_name or not isinstance(language_name, str):
        raise ValueError("❌ config.LANGUAGE must be a non-empty string.")

    # Normalize input: lowercase, remove spaces
    normalized = "".join(language_name.lower().split())

    # Comprehensive ISO 639-1 mapping (alphabetical by language name)
    lang_map = {
        "afar": "aa",
        "abkhazian": "ab",
        "afrikaans": "af",
        "akan": "ak",
        "albanian": "sq",
        "amharic": "am",
        "arabic": "ar",
        "aragonese": "an",
        "armenian": "hy",
        "assamese": "as",
        "avaric": "av",
        "avestan": "ae",
        "aymara": "ay",
        "azerbaijani": "az",
        "bashkir": "ba",
        "bambara": "bm",
        "basque": "eu",
        "belarusian": "be",
        "bengali": "bn",
        "bislama": "bi",
        "bosnian": "bs",
        "breton": "br",
        "bulgarian": "bg",
        "burmese": "my",
        "catalan": "ca",
        "chamorro": "ch",
        "chechen": "ce",
        "chichewa": "ny",
        "chinese": "zh",
        "chuvash": "cv",
        "cornish": "kw",
        "corsican": "co",
        "cree": "cr",
        "croatian": "hr",
        "czech": "cs",
        "danish": "da",
        "divehi": "dv",
        "dutch": "nl",
        "dzongkha": "dz",
        "english": "en",
        "esperanto": "eo",
        "estonian": "et",
        "ewe": "ee",
        "faroese": "fo",
        "fijian": "fj",
        "finnish": "fi",
        "french": "fr",
        "fulah": "ff",
        "galician": "gl",
        "ganda": "lg",
        "georgian": "ka",
        "german": "de",
        "greek": "el",
        "guarani": "gn",
        "gujarati": "gu",
        "haitian": "ht",
        "hausa": "ha",
        "hebrew": "he",
        "herero": "hz",
        "hindi": "hi",
        "hiri motu": "ho",
        "hungarian": "hu",
        "icelandic": "is",
        "ido": "io",
        "igbo": "ig",
        "indonesian": "id",
        "interlingua": "ia",
        "interlingue": "ie",
        "inuktitut": "iu",
        "inupiaq": "ik",
        "irish": "ga",
        "italian": "it",
        "japanese": "ja",
        "javanese": "jv",
        "kalaallisut": "kl",
        "kannada": "kn",
        "kanuri": "kr",
        "kashmiri": "ks",
        "kazakh": "kk",
        "khmer": "km",
        "kikuyu": "ki",
        "kinyarwanda": "rw",
        "kirghiz": "ky",
        "komi": "kv",
        "kongo": "kg",
        "korean": "ko",
        "kuanyama": "kj",
        "kurdish": "ku",
        "lao": "lo",
        "latin": "la",
        "latvian": "lv",
        "limburgish": "li",
        "lingala": "ln",
        "lithuanian": "lt",
        "luba-katanga": "lu",
        "luxembourgish": "lb",
        "macedonian": "mk",
        "malagasy": "mg",
        "malay": "ms",
        "malayalam": "ml",
        "maltese": "mt",
        "manx": "gv",
        "maori": "mi",
        "marathi": "mr",
        "marshallese": "mh",
        "mongolian": "mn",
        "nauru": "na",
        "navajo": "nv",
        "ndonga": "ng",
        "nepali": "ne",
        "northndebele": "nd",
        "northern sami": "se",
        "norwegian": "no",
        "norwegianbokmål": "nb",
        "norwegiannynorsk": "nn",
        "occitan": "oc",
        "ojibwa": "oj",
        "oriya": "or",
        "oromo": "om",
        "ossetian": "os",
        "pali": "pi",
        "pashto": "ps",
        "persian": "fa",
        "polish": "pl",
        "portuguese": "pt",
        "punjabi": "pa",
        "quechua": "qu",
        "romanian": "ro",
        "romansh": "rm",
        "rundi": "rn",
        "russian": "ru",
        "samoan": "sm",
        "sango": "sg",
        "sanskrit": "sa",
        "sardinian": "sc",
        "serbian": "sr",
        "shona": "sn",
        "sindhi": "sd",
        "sinhala": "si",
        "slovak": "sk",
        "slovene": "sl",
        "somali": "so",
        "southndebele": "nr",
        "southernsotho": "st",
        "spanish": "es",
        "sundanese": "su",
        "swahili": "sw",
        "swati": "ss",
        "swedish": "sv",
        "tagalog": "tl",
        "tahitian": "ty",
        "tajik": "tg",
        "tamil": "ta",
        "tatar": "tt",
        "telugu": "te",
        "thai": "th",
        "tibetan": "bo",
        "tigrinya": "ti",
        "tonga": "to",
        "tsonga": "ts",
        "tswana": "tn",
        "turkish": "tr",
        "turkmen": "tk",
        "twi": "tw",
        "uighur": "ug",
        "ukrainian": "uk",
        "urdu": "ur",
        "uzbek": "uz",
        "venda": "ve",
        "vietnamese": "vi",
        "volapük": "vo",
        "walloon": "wa",
        "welsh": "cy",
        "western frisian": "fy",
        "wolof": "wo",
        "xhosa": "xh",
        "yiddish": "yi",
        "yoruba": "yo",
        "zhuang": "za",
        "zulu": "zu",
    }

    code = lang_map.get(normalized)
    if not code:
        raise ValueError(
            f"❌ Unknown language '{language_name}'.\n"
            f"Please correct 'config.LANGUAGE' to a supported language name.\n"
            f"This is required for translation to work correctly."
        )

    return code


# Optional: quick command-line test
if __name__ == "__main__":
    import sys
    if len(sys.argv) < 2:
        print("Usage: python lang_helper.py <LanguageName>")
    else:
        try:
            print(get_iso_code(sys.argv[1]))
        except ValueError as e:
            print(e)
